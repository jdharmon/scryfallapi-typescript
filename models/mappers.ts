/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */


export const RelatedCards = {
  serializedName: "related_cards",
  type: {
    name: "Composite",
    className: "RelatedCards",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      uri: {
        serializedName: "uri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ImageUri = {
  serializedName: "image_uri",
  type: {
    name: "Composite",
    className: "ImageUri",
    modelProperties: {
      small: {
        serializedName: "small",
        type: {
          name: "String"
        }
      },
      normal: {
        serializedName: "normal",
        type: {
          name: "String"
        }
      },
      large: {
        serializedName: "large",
        type: {
          name: "String"
        }
      },
      png: {
        serializedName: "png",
        type: {
          name: "String"
        }
      },
      artCrop: {
        serializedName: "art_crop",
        type: {
          name: "String"
        }
      },
      borderCrop: {
        serializedName: "border_crop",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CardFace = {
  serializedName: "card_face",
  type: {
    name: "Composite",
    className: "CardFace",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      typeLine: {
        serializedName: "type_line",
        type: {
          name: "String"
        }
      },
      oracleText: {
        serializedName: "oracle_text",
        type: {
          name: "String"
        }
      },
      manaCost: {
        serializedName: "mana_cost",
        type: {
          name: "String"
        }
      },
      colors: {
        serializedName: "colors",
        type: {
          name: "Sequence",
          element: {
            serializedName: "ColorsElementType",
            type: {
              name: "Enum",
              allowedValues: [
                "W",
                "U",
                "B",
                "R",
                "G"
              ]
            }
          }
        }
      },
      colorIndicator: {
        serializedName: "color_indicator",
        type: {
          name: "Sequence",
          element: {
            serializedName: "ColorsElementType",
            type: {
              name: "Enum",
              allowedValues: [
                "W",
                "U",
                "B",
                "R",
                "G"
              ]
            }
          }
        }
      },
      power: {
        serializedName: "power",
        type: {
          name: "String"
        }
      },
      toughness: {
        serializedName: "toughness",
        type: {
          name: "String"
        }
      },
      loyalty: {
        serializedName: "loyalty",
        type: {
          name: "String"
        }
      },
      flavorText: {
        serializedName: "flavor_text",
        type: {
          name: "String"
        }
      },
      illustrationId: {
        serializedName: "illustration_id",
        type: {
          name: "Uuid"
        }
      },
      imageUris: {
        serializedName: "image_uris",
        type: {
          name: "Composite",
          className: "ImageUri"
        }
      }
    }
  }
};

export const Legality = {
  serializedName: "legality",
  type: {
    name: "Composite",
    className: "Legality",
    modelProperties: {
      standard: {
        serializedName: "standard",
        type: {
          name: "Enum",
          allowedValues: [
            "legal",
            "not_legal",
            "restricted",
            "banned"
          ]
        }
      },
      future: {
        serializedName: "future",
        type: {
          name: "Enum",
          allowedValues: [
            "legal",
            "not_legal",
            "restricted",
            "banned"
          ]
        }
      },
      frontier: {
        serializedName: "frontier",
        type: {
          name: "Enum",
          allowedValues: [
            "legal",
            "not_legal",
            "restricted",
            "banned"
          ]
        }
      },
      modern: {
        serializedName: "modern",
        type: {
          name: "Enum",
          allowedValues: [
            "legal",
            "not_legal",
            "restricted",
            "banned"
          ]
        }
      },
      legacy: {
        serializedName: "legacy",
        type: {
          name: "Enum",
          allowedValues: [
            "legal",
            "not_legal",
            "restricted",
            "banned"
          ]
        }
      },
      pauper: {
        serializedName: "pauper",
        type: {
          name: "Enum",
          allowedValues: [
            "legal",
            "not_legal",
            "restricted",
            "banned"
          ]
        }
      },
      vintage: {
        serializedName: "vintage",
        type: {
          name: "Enum",
          allowedValues: [
            "legal",
            "not_legal",
            "restricted",
            "banned"
          ]
        }
      },
      penny: {
        serializedName: "penny",
        type: {
          name: "Enum",
          allowedValues: [
            "legal",
            "not_legal",
            "restricted",
            "banned"
          ]
        }
      },
      commander: {
        serializedName: "commander",
        type: {
          name: "Enum",
          allowedValues: [
            "legal",
            "not_legal",
            "restricted",
            "banned"
          ]
        }
      },
      onevOne: {
        serializedName: "1v1",
        type: {
          name: "Enum",
          allowedValues: [
            "legal",
            "not_legal",
            "restricted",
            "banned"
          ]
        }
      },
      duel: {
        serializedName: "duel",
        type: {
          name: "Enum",
          allowedValues: [
            "legal",
            "not_legal",
            "restricted",
            "banned"
          ]
        }
      },
      brawl: {
        serializedName: "brawl",
        type: {
          name: "Enum",
          allowedValues: [
            "legal",
            "not_legal",
            "restricted",
            "banned"
          ]
        }
      }
    }
  }
};

export const Card = {
  serializedName: "card",
  type: {
    name: "Composite",
    className: "Card",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      oracleId: {
        serializedName: "oracle_id",
        type: {
          name: "Uuid"
        }
      },
      multiverseIds: {
        serializedName: "multiverse_ids",
        type: {
          name: "Sequence",
          element: {
            serializedName: "numberElementType",
            type: {
              name: "Number"
            }
          }
        }
      },
      mtgoId: {
        serializedName: "mtgo_id",
        type: {
          name: "Number"
        }
      },
      arenaId: {
        serializedName: "arena_id",
        type: {
          name: "Number"
        }
      },
      mtgoFoilId: {
        serializedName: "mtgo_foil_id",
        type: {
          name: "Number"
        }
      },
      uri: {
        serializedName: "uri",
        type: {
          name: "String"
        }
      },
      scryfallUri: {
        serializedName: "scryfall_uri",
        type: {
          name: "String"
        }
      },
      printsSearchUri: {
        serializedName: "prints_search_uri",
        type: {
          name: "String"
        }
      },
      rulingsUri: {
        serializedName: "rulings_uri",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      layout: {
        serializedName: "layout",
        type: {
          name: "Enum",
          allowedValues: [
            "normal",
            "split",
            "flip",
            "transform",
            "meld",
            "leveler",
            "saga",
            "planar",
            "scheme",
            "vanguard",
            "token",
            "double_faced_token",
            "emblem",
            "augment",
            "host"
          ]
        }
      },
      cmc: {
        serializedName: "cmc",
        type: {
          name: "Number"
        }
      },
      typeLine: {
        serializedName: "type_line",
        type: {
          name: "String"
        }
      },
      oracleText: {
        serializedName: "oracle_text",
        type: {
          name: "String"
        }
      },
      manaCost: {
        serializedName: "mana_cost",
        type: {
          name: "String"
        }
      },
      power: {
        serializedName: "power",
        type: {
          name: "String"
        }
      },
      toughness: {
        serializedName: "toughness",
        type: {
          name: "String"
        }
      },
      loyalty: {
        serializedName: "loyalty",
        type: {
          name: "String"
        }
      },
      lifeModifier: {
        serializedName: "life_modifier",
        type: {
          name: "String"
        }
      },
      handModifier: {
        serializedName: "hand_modifier",
        type: {
          name: "String"
        }
      },
      colors: {
        serializedName: "colors",
        type: {
          name: "Sequence",
          element: {
            serializedName: "ColorsElementType",
            type: {
              name: "Enum",
              allowedValues: [
                "W",
                "U",
                "B",
                "R",
                "G"
              ]
            }
          }
        }
      },
      colorIndicator: {
        serializedName: "color_indicator",
        type: {
          name: "Sequence",
          element: {
            serializedName: "ColorsElementType",
            type: {
              name: "Enum",
              allowedValues: [
                "W",
                "U",
                "B",
                "R",
                "G"
              ]
            }
          }
        }
      },
      colorIdentity: {
        serializedName: "color_identity",
        type: {
          name: "Sequence",
          element: {
            serializedName: "ColorsElementType",
            type: {
              name: "Enum",
              allowedValues: [
                "W",
                "U",
                "B",
                "R",
                "G"
              ]
            }
          }
        }
      },
      allParts: {
        serializedName: "all_parts",
        type: {
          name: "Sequence",
          element: {
            serializedName: "RelatedCardsElementType",
            type: {
              name: "Composite",
              className: "RelatedCards"
            }
          }
        }
      },
      cardFaces: {
        serializedName: "card_faces",
        type: {
          name: "Sequence",
          element: {
            serializedName: "CardFaceElementType",
            type: {
              name: "Composite",
              className: "CardFace"
            }
          }
        }
      },
      legalities: {
        serializedName: "legalities",
        type: {
          name: "Composite",
          className: "Legality"
        }
      },
      reserved: {
        serializedName: "reserved",
        type: {
          name: "Boolean"
        }
      },
      edhrecRank: {
        serializedName: "edhrec_rank",
        type: {
          name: "Number"
        }
      },
      set: {
        serializedName: "set",
        type: {
          name: "String"
        }
      },
      setName: {
        serializedName: "set_name",
        type: {
          name: "String"
        }
      },
      collectorNumber: {
        serializedName: "collector_number",
        type: {
          name: "String"
        }
      },
      setSearchUri: {
        serializedName: "set_search_uri",
        type: {
          name: "String"
        }
      },
      scryfallSetUri: {
        serializedName: "scryfall_set_uri",
        type: {
          name: "String"
        }
      },
      imageUris: {
        serializedName: "image_uris",
        type: {
          name: "Composite",
          className: "ImageUri"
        }
      },
      highresImage: {
        serializedName: "highres_image",
        type: {
          name: "Boolean"
        }
      },
      reprint: {
        serializedName: "reprint",
        type: {
          name: "Boolean"
        }
      },
      digital: {
        serializedName: "digital",
        type: {
          name: "Boolean"
        }
      },
      rarity: {
        serializedName: "rarity",
        type: {
          name: "Enum",
          allowedValues: [
            "common",
            "uncommon",
            "rare",
            "mythic"
          ]
        }
      },
      flavorText: {
        serializedName: "flavor_text",
        type: {
          name: "String"
        }
      },
      artist: {
        serializedName: "artist",
        type: {
          name: "String"
        }
      },
      illustrationId: {
        serializedName: "illustration_id",
        type: {
          name: "Uuid"
        }
      },
      frame: {
        serializedName: "frame",
        type: {
          name: "String"
        }
      },
      fullArt: {
        serializedName: "full_art",
        type: {
          name: "Boolean"
        }
      },
      watermark: {
        serializedName: "watermark",
        type: {
          name: "String"
        }
      },
      borderColor: {
        serializedName: "border_color",
        type: {
          name: "Enum",
          allowedValues: [
            "black",
            "borderless",
            "gold",
            "silver",
            "white"
          ]
        }
      },
      storySpotlightNumber: {
        serializedName: "story_spotlight_number",
        type: {
          name: "Number"
        }
      },
      storySpotlightUri: {
        serializedName: "story_spotlight_uri",
        type: {
          name: "String"
        }
      },
      timeshifted: {
        serializedName: "timeshifted",
        type: {
          name: "Boolean"
        }
      },
      colorshifted: {
        serializedName: "colorshifted",
        type: {
          name: "Boolean"
        }
      },
      futureshifted: {
        serializedName: "futureshifted",
        type: {
          name: "Boolean"
        }
      },
      purchaseUris: {
        serializedName: "purchase_uris",
        type: {
          name: "Dictionary",
          value: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      },
      relatedUris: {
        serializedName: "related_uris",
        type: {
          name: "Dictionary",
          value: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Catalog = {
  serializedName: "catalog",
  type: {
    name: "Composite",
    className: "Catalog",
    modelProperties: {
      totalItems: {
        serializedName: "total_items",
        type: {
          name: "Number"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Set = {
  serializedName: "set",
  type: {
    name: "Composite",
    className: "Set",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      mtgoCode: {
        serializedName: "mtgo_code",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      setType: {
        serializedName: "set_type",
        type: {
          name: "Enum",
          allowedValues: [
            "core",
            "expansion",
            "masters",
            "masterpiece",
            "from_the_vault",
            "spellbook",
            "premium_deck",
            "duel_deck",
            "commander",
            "planechase",
            "conspiracy",
            "archenemy",
            "vanguard",
            "funny",
            "starter",
            "box",
            "promo",
            "token",
            "memorabilia",
            "treasure_chest"
          ]
        }
      },
      releasedAt: {
        serializedName: "released_at",
        type: {
          name: "Date"
        }
      },
      blockCode: {
        serializedName: "block_code",
        type: {
          name: "String"
        }
      },
      block: {
        serializedName: "block",
        type: {
          name: "String"
        }
      },
      parentSetCode: {
        serializedName: "parent_set_code",
        type: {
          name: "String"
        }
      },
      cardCount: {
        serializedName: "card_count",
        type: {
          name: "Number"
        }
      },
      digital: {
        serializedName: "digital",
        type: {
          name: "Boolean"
        }
      },
      foil: {
        serializedName: "foil",
        type: {
          name: "Boolean"
        }
      },
      iconSvgUri: {
        serializedName: "icon_svg_uri",
        type: {
          name: "String"
        }
      },
      searchUri: {
        serializedName: "search_uri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Ruling = {
  serializedName: "ruling",
  type: {
    name: "Composite",
    className: "Ruling",
    modelProperties: {
      source: {
        serializedName: "source",
        type: {
          name: "String"
        }
      },
      publishedAt: {
        serializedName: "published_at",
        type: {
          name: "Date"
        }
      },
      comment: {
        serializedName: "comment",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CardSymbol = {
  serializedName: "card_symbol",
  type: {
    name: "Composite",
    className: "CardSymbol",
    modelProperties: {
      symbol: {
        serializedName: "symbol",
        type: {
          name: "String"
        }
      },
      looseVariant: {
        serializedName: "loose_variant",
        type: {
          name: "String"
        }
      },
      english: {
        serializedName: "english",
        type: {
          name: "String"
        }
      },
      transposable: {
        serializedName: "transposable",
        type: {
          name: "Boolean"
        }
      },
      representsMana: {
        serializedName: "represents_mana",
        type: {
          name: "Boolean"
        }
      },
      cmc: {
        serializedName: "cmc",
        type: {
          name: "Number"
        }
      },
      appearsInManaCosts: {
        serializedName: "appears_in_mana_costs",
        type: {
          name: "Boolean"
        }
      },
      funny: {
        serializedName: "funny",
        type: {
          name: "Boolean"
        }
      },
      colors: {
        serializedName: "colors",
        type: {
          name: "Enum",
          allowedValues: [
            "W",
            "U",
            "B",
            "R",
            "G"
          ]
        }
      }
    }
  }
};

export const ManaCost = {
  serializedName: "mana_cost",
  type: {
    name: "Composite",
    className: "ManaCost",
    modelProperties: {
      cost: {
        serializedName: "cost",
        type: {
          name: "String"
        }
      },
      cmc: {
        serializedName: "cmc",
        type: {
          name: "Number"
        }
      },
      colors: {
        serializedName: "colors",
        type: {
          name: "Enum",
          allowedValues: [
            "W",
            "U",
            "B",
            "R",
            "G"
          ]
        }
      },
      colorless: {
        serializedName: "colorless",
        type: {
          name: "Boolean"
        }
      },
      monocolored: {
        serializedName: "monocolored",
        type: {
          name: "Boolean"
        }
      },
      multicolored: {
        serializedName: "multicolored",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const CardList = {
  serializedName: "card_list",
  type: {
    name: "Composite",
    className: "CardList",
    modelProperties: {
      totalCards: {
        serializedName: "total_cards",
        type: {
          name: "Number"
        }
      },
      hasMore: {
        serializedName: "has_more",
        type: {
          name: "Boolean"
        }
      },
      nextPage: {
        serializedName: "next_page",
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Sequence",
          element: {
            serializedName: "CardElementType",
            type: {
              name: "Composite",
              className: "Card"
            }
          }
        }
      }
    }
  }
};

export const SetList = {
  serializedName: "set_list",
  type: {
    name: "Composite",
    className: "SetList",
    modelProperties: {
      data: {
        serializedName: "data",
        type: {
          name: "Sequence",
          element: {
            serializedName: "SetElementType",
            type: {
              name: "Composite",
              className: "Set"
            }
          }
        }
      }
    }
  }
};

export const RulingList = {
  serializedName: "ruling_list",
  type: {
    name: "Composite",
    className: "RulingList",
    modelProperties: {
      data: {
        serializedName: "data",
        type: {
          name: "Sequence",
          element: {
            serializedName: "RulingElementType",
            type: {
              name: "Composite",
              className: "Ruling"
            }
          }
        }
      }
    }
  }
};

export const CardSymbolList = {
  serializedName: "card_symbol_list",
  type: {
    name: "Composite",
    className: "CardSymbolList",
    modelProperties: {
      data: {
        serializedName: "data",
        type: {
          name: "Sequence",
          element: {
            serializedName: "CardSymbolElementType",
            type: {
              name: "Composite",
              className: "CardSymbol"
            }
          }
        }
      }
    }
  }
};

export const ErrorModel = {
  serializedName: "error",
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "Number"
        }
      },
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      warnings: {
        serializedName: "warnings",
        type: {
          name: "Sequence",
          element: {
            serializedName: "stringElementType",
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const CardsGetAllOptionalParams = {
  serializedName: "GetAllOptions",
  type: {
    name: "Composite",
    className: "CardsGetAllOptionalParams",
    modelProperties: {
      page: {
        serializedName: "page",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CardsSearchOptionalParams = {
  serializedName: "SearchOptions",
  type: {
    name: "Composite",
    className: "CardsSearchOptionalParams",
    modelProperties: {
      unique: {
        serializedName: "unique",
        type: {
          name: "Enum",
          allowedValues: [
            "cards",
            "art",
            "prints"
          ]
        }
      },
      order: {
        serializedName: "order",
        type: {
          name: "Enum",
          allowedValues: [
            "name",
            "set",
            "released",
            "rarity",
            "color",
            "usd",
            "tix",
            "eur",
            "cmc",
            "power",
            "toughness",
            "edhrec",
            "artist"
          ]
        }
      },
      dir: {
        serializedName: "dir",
        type: {
          name: "Enum",
          allowedValues: [
            "auto",
            "asc",
            "desc"
          ]
        }
      },
      includeExtras: {
        serializedName: "include_extras",
        type: {
          name: "Boolean"
        }
      },
      page: {
        serializedName: "page",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CardsGetNamedOptionalParams = {
  serializedName: "GetNamedOptions",
  type: {
    name: "Composite",
    className: "CardsGetNamedOptionalParams",
    modelProperties: {
      exact: {
        serializedName: "exact",
        type: {
          name: "String"
        }
      },
      fuzzy: {
        serializedName: "fuzzy",
        type: {
          name: "String"
        }
      },
      set: {
        serializedName: "set",
        type: {
          name: "String"
        }
      },
      format: {
        serializedName: "format",
        type: {
          name: "String"
        }
      },
      face: {
        serializedName: "face",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      pretty: {
        serializedName: "pretty",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};
