/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/setsMappers";
import * as Parameters from "../models/parameters";
import { ScryfallClientContext } from "../scryfallClientContext";

/** Class representing a Sets. */
export class Sets {
  private readonly client: ScryfallClientContext;

  /**
   * Create a Sets.
   * @param {ScryfallClientContext} client Reference to the service client.
   */
  constructor(client: ScryfallClientContext) {
    this.client = client;
  }

  /**
   * @param [options] The optional parameters
   * @returns Promise<Models.SetsGetAllResponse>
   */
  getAll(options?: msRest.RequestOptionsBase): Promise<Models.SetsGetAllResponse>;
  /**
   * @param callback The callback
   */
  getAll(callback: msRest.ServiceCallback<Models.SetList>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  getAll(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SetList>): void;
  getAll(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SetList>, callback?: msRest.ServiceCallback<Models.SetList>): Promise<Models.SetsGetAllResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      getAllOperationSpec,
      callback) as Promise<Models.SetsGetAllResponse>;
  }

  /**
   * @param code
   * @param [options] The optional parameters
   * @returns Promise<Models.SetsGetByCodeResponse>
   */
  getByCode(code: string, options?: msRest.RequestOptionsBase): Promise<Models.SetsGetByCodeResponse>;
  /**
   * @param code
   * @param callback The callback
   */
  getByCode(code: string, callback: msRest.ServiceCallback<Models.Set>): void;
  /**
   * @param code
   * @param options The optional parameters
   * @param callback The callback
   */
  getByCode(code: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Set>): void;
  getByCode(code: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Set>, callback?: msRest.ServiceCallback<Models.Set>): Promise<Models.SetsGetByCodeResponse> {
    return this.client.sendOperationRequest(
      {
        code,
        options
      },
      getByCodeOperationSpec,
      callback) as Promise<Models.SetsGetByCodeResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getAllOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "sets",
  responses: {
    200: {
      bodyMapper: Mappers.SetList
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};

const getByCodeOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "sets/{code}",
  urlParameters: [
    Parameters.code
  ],
  responses: {
    200: {
      bodyMapper: Mappers.Set
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};
